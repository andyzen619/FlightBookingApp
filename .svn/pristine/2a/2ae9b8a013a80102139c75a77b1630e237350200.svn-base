package cs.b07.cscb07project.activities;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.RadioButton;

import java.text.ParseException;

import cs.b07.cscb07project.R;
import cs.b07.cscb07project.backEnd.Managers.ClientManager;
import cs.b07.cscb07project.backEnd.Managers.PasswordManager;
import cs.b07.cscb07project.backEnd.driver.FlightBookingApplication;
import cs.b07.cscb07project.backEnd.users.Admin;
import cs.b07.cscb07project.backEnd.users.Client;
import cs.b07.cscb07project.backEnd.users.User;

/**
 *
 */
public class RegisterActivity extends AppCompatActivity {

    private boolean isAdmin = false;
   /* private ClientManager clientManager;
    private PasswordManager passwordManager;*/

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        /*Intent intent = getIntent();
        clientManager = (ClientManager)intent.getSerializableExtra(MainActivity.CLIENT_KEY);
        passwordManager =  (PasswordManager)intent.getSerializableExtra(MainActivity.PASS_KEY);*/
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item){
        Intent intent = new Intent(getApplicationContext(), MainActivity.class);
        startActivity(intent);
        return true;
    }

    public void onRadioButtonClicked(View view) {
        // Is the button now checked?
        boolean checked = ((RadioButton) view).isChecked();

        // Check which radio button was clicked
        switch(view.getId()) {
            case R.id.radio_admin:
                if (checked) {
                    isAdmin = true;
                    ((EditText) findViewById(R.id.register_first_names)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_first_names)).setVisibility(View.GONE);
                    ((EditText) findViewById(R.id.register_last_name)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_last_name)).setVisibility(View.GONE);
                    ((EditText) findViewById(R.id.register_email)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_email)).setVisibility(View.GONE);
                    ((EditText) findViewById(R.id.register_address)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_address)).setVisibility(View.GONE);
                    ((EditText) findViewById(R.id.register_card_number)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_card_number)).setVisibility(View.GONE);
                    ((EditText) findViewById(R.id.register_credit_card_expiery_date)).setEnabled(false);
                    ((EditText) findViewById(R.id.register_credit_card_expiery_date)).setVisibility(View.GONE);

                }
                break;
            case R.id.radio_client:
                if (checked) {
                    isAdmin = false;
                    ((EditText) findViewById(R.id.register_first_names)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_first_names)).setVisibility(View.VISIBLE);
                    ((EditText) findViewById(R.id.register_last_name)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_last_name)).setVisibility(View.VISIBLE);
                    ((EditText) findViewById(R.id.register_email)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_email)).setVisibility(View.VISIBLE);
                    ((EditText) findViewById(R.id.register_address)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_address)).setVisibility(View.VISIBLE);
                    ((EditText) findViewById(R.id.register_card_number)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_card_number)).setVisibility(View.VISIBLE);
                    ((EditText) findViewById(R.id.register_credit_card_expiery_date)).setEnabled(true);
                    ((EditText) findViewById(R.id.register_credit_card_expiery_date)).setVisibility(View.VISIBLE);
                }
                break;
        }
    }

    public void register(View view) {
      boolean isRegistered;

      // Create AlertDialogs for needed errors and invalid inputs by user
      AlertDialog.Builder userExists = new AlertDialog.Builder(this);
      userExists.setMessage("Username already exists!");
      userExists.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
          @Override
          public void onClick(DialogInterface dialog, int which) {
              dialog.dismiss();
          }
      })
              .setTitle("Registration Error");

      AlertDialog.Builder invalidDateFormat = new AlertDialog.Builder(this);
      invalidDateFormat.setMessage("Date format must be YYYY-MM-DD");
      invalidDateFormat.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
          @Override
          public void onClick(DialogInterface dialog, int which) {
              dialog.dismiss();
          }
      })
              .setTitle("Registration Error");

      // Get EditText fields
      EditText usernameText = (EditText) findViewById(R.id.register_username_field);
      EditText passwordText = (EditText) findViewById(R.id.register_password_field);
      EditText cardExpiryText = (EditText) findViewById(R.id.register_credit_card_expiery_date);
      String username = usernameText.getText().toString();
      String password = passwordText.getText().toString();

      // Check if user already exists
      if (FlightBookingApplication.getUser(username) != null) {
        isRegistered = true;
      } else {
        isRegistered = false;
      }

      if (isRegistered == true) {
        // Display errors for registering with an existing username
        userExists.show();
        usernameText.setError("Username taken!");
        usernameText.requestFocus();
      } else {
        // Register as Admin
        if (isAdmin) {
          Admin newAdmin = new Admin(username);
          MainActivity.passManager.addUser(newAdmin, password);
          FlightBookingApplication.addUser(newAdmin);
          Intent intent = new Intent(this, MainActivity.class);
          MainActivity.passManager.saveToFile();
          MainActivity.clientManager.saveToFile();
          startActivity(intent);
          } else { // Register as Client
            String firstName = ((EditText) findViewById(R.id.register_first_names)).getText().toString();
            String lastName = ((EditText) findViewById(R.id.register_last_name)).getText().toString();
            String email = ((EditText) findViewById(R.id.register_email)).getText().toString();
            String address = ((EditText) findViewById(R.id.register_address)).getText().toString();
            String cardNumber = ((EditText) findViewById(R.id.register_card_number)).getText().toString();
            String expiryDate = ((EditText)
                      findViewById(R.id.register_credit_card_expiery_date)).getText().toString();
              try {
                  Client newClient = new Client(username, lastName, firstName, email, address,
                          cardNumber, expiryDate);
                  MainActivity.passManager.addUser(newClient, password);
                  FlightBookingApplication.addUser(newClient);
                  Intent intent = new Intent(this, MainActivity.class);
                  MainActivity.passManager.saveToFile();
                  MainActivity.clientManager.saveToFile();
                  startActivity(intent);
              } catch (ParseException e) {
                  // Handle invalid input by user
                  invalidDateFormat.show();
                  cardExpiryText.setError("Format must be 'YYYY-MM-DD'");
              }
          }

      }
    }
}
