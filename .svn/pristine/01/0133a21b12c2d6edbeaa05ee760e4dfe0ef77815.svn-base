package transportation;

import java.io.Serializable;
import java.text.ParseException;

/**
 * A class representing a flight between an origin and a destination on a particular date.
 * Each Flight must have a unique flight number.
 * @author Raphael Alviz, Zain Amir, Ian Ferguson, Andy Liang, Johnathan Tsoi
 */
public class Flight extends Transportation implements Serializable {
  // Private instance variables.
  private static final long serialVersionUID = -5290186165067329550L;
  private String flightNumber;
  private String airline;

  /**
   * Creates a new Flight object with a unique flight number, and a given departureTime,
   * arrivalTime, airline, origin, destination and cost. Will calculate total travel time.
   * @param flightNumber A String representing the unique flight number assigned to this
   *     Flight.
   * @param departureTime A String representing the departure time of the Flight, must be in
   *     the format YYYY-MM-DD HH:MM.
   * @param arrivalTime A String representing the arrival time of the Flight, must be in
   *     the format YYYY-MM-DD HH:MM.
   * @param airline A String representing the name of the airline operating the Flight.
   * @param origin A String representing the origin city that the Flight departs from.
   * @param destination A String representing the destination city that the Flight arrives
   *     at.
   * @param cost A double representing the total cost of the Flight. The cost has exactly two
   *     decimal places.
   * @throws ParseException Throws a ParseException if the departureTime or arrivalTime are
   *     incorrectly formatted.
   */
  public Flight(String flightNumber, String departureTime, String arrivalTime, String airline,
      String origin, String destination, double cost) throws ParseException {
    super(departureTime, arrivalTime, origin, destination, cost);
    this.flightNumber = flightNumber;
    this.airline = airline;
  }

  /**
   * Returns a String representing the unique Flight number assigned to the Flight.
   * @return A String representing the unique Flight number assigned to the Flight.
   */
  public String getFlightNumber() {
    return flightNumber;
  }

  /**
   * Returns a String representing the name of the airline operating the Flight.
   * @return A String representing the name of the airline operating the Flight.
   */
  public String getAirline() {
    return airline;
  }

  /**
   * Changes the name of the airline operating the Flight to the given String.
   * @param airline A String representing the name of the airline operating the Flight.
   */
  public void setAirline(String airline) {
    this.airline = airline;
  }

  @Override
  public String toString() {
    return (flightNumber + "," + getDepartureTimeString() + "," + getArrivalTimeString()
        + "," + airline + "," + getOrigin() + "," + getDestination() + ","
        + String.valueOf(getCost()));
  }

}