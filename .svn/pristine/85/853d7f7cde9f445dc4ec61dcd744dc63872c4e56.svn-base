package cs.b07.cscb07project.backEnd.Managers;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import cs.b07.cscb07project.backEnd.transportation.Flight;

/**
 * Manager for the Flight Records.
 * Created by zain on 24/11/15.
 */
public class FlightManager {

    private Map<String,Flight>flights;

    private static final Logger fLogger =
            Logger.getLogger(FlightManager.class.getPackage().getName());

    /**
     * Creates a new FlightManager for the Flights whose information
     * is stored in file filePath.
     * @throws IOException if filePath cannot be opened/created.
     */
    public FlightManager(String filePath) throws IOException {
        flights = new HashMap<>();
        // Populates the record list using stored data, if it exists.
        File file = new File(filePath);
        if (file.exists()) {
            int x =0; // placeholder
            //readFromFile(file.getPath());
        } else {
            file.createNewFile();
        }
    }

    /**
     * Writes the flights to file outputStream.
     * @param filePath the file to write the records to
     */
    public void saveToFile(String filePath) {
        try (
                OutputStream file = new FileOutputStream(filePath);
                OutputStream buffer = new BufferedOutputStream(file);
                ObjectOutput output = new ObjectOutputStream(buffer);
        ) {
            output.writeObject(flights);
        } catch (IOException ex) {
            fLogger.log(Level.SEVERE, "Cannot perform output.", ex);
        }
    }

    private void readFromFile(String path) {
        try (
                InputStream file = new FileInputStream(path);
                InputStream buffer = new BufferedInputStream(file);
                ObjectInput input = new ObjectInputStream(buffer);
        ) {
            //deserialize the Map
            flights = (Map<String,Flight>)input.readObject();
        } catch (ClassNotFoundException ex) {
            fLogger.log(Level.SEVERE, "Cannot perform input. Class not found.", ex);
        } catch (IOException ex) {
            fLogger.log(Level.SEVERE, "Cannot perform input.", ex);
        }
    }
}
